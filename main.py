from urllib.request import urlopen
import re

cves = []  # list of CVEs goes here
upgradable_packages = []
unfixed_packages = []
version = 'jessie'

print("Full list of CVEs:")
for cve in cves:
    url = 'https://security-tracker.debian.org/tracker/'
    response = urlopen(url + cve)
    html = response.read().decode('UTF-8')

    # get package name
    package_name_start = 'Status'
    begin = str.find(html, package_name_start) + len(package_name_start)
    package_name = html[begin:begin + 100]
    begin = str.find(package_name, '">') + 2
    end = str.find(package_name, '</a>')
    package_name = package_name[begin:end]

    # remove span tags
    html = re.sub('(<span class=".*?">)', '', html)
    html = str.replace(html, '</span>', '')

    # extract status
    version_begin = str.find(html, version) + len(version)
    html_after_version = html[version_begin:version_begin + 100]
    closing_tag_after_version = str.find(html_after_version, '</td>')
    status = str.replace(html_after_version[closing_tag_after_version +
                                            len('</td>'):closing_tag_after_version + 80], '<td>', '')
    status = str.split(status, '</td>')

    try:
        print(package_name + '\t' + cve + '\t' + status[1])
        # add packages of fixed CVEs to the list of upgradable packages
        if status[1] == 'fixed':
            if package_name not in upgradable_packages:
                upgradable_packages.append(package_name)
        else:
            if(package_name not in unfixed_packages):
                unfixed_packages.append(package_name)
    except IndexError:
        print('could not find version of https://security-tracker.debian.org/tracker/' + cve)

print("\nUpgradeable packages:")
for package in upgradable_packages:
    # mark not completely upgradeable packages and remove them from the unfixed
    if package in unfixed_packages:
        print(package + ' (will still have vulnerabilities after upgrade)')
        unfixed_packages.remove(package)
    else:
        print(package)

print("\nUnfixed packages")
for package in unfixed_packages:
    print(package)
